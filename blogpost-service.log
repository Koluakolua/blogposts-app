2024-03-12T15:24:30.625+02:00  INFO 18728 --- [blogpost-service] [main] c.b.b.BlogpostServiceApplication         : Starting BlogpostServiceApplication using Java 21.0.2 with PID 18728 (C:\Users\USER\IntelliJProjects\blogposts\blogpost-service\blogpost-service\target\classes started by USER in C:\Users\USER\IntelliJProjects\blogposts)
2024-03-12T15:24:30.627+02:00  INFO 18728 --- [blogpost-service] [main] c.b.b.BlogpostServiceApplication         : No active profile set, falling back to 1 default profile: "default"
2024-03-12T15:24:31.616+02:00  INFO 18728 --- [blogpost-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-03-12T15:24:31.766+02:00  INFO 18728 --- [blogpost-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 121 ms. Found 1 JPA repository interface.
2024-03-12T15:24:31.988+02:00  INFO 18728 --- [blogpost-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=c071114f-a766-387d-abe3-ec669beca034
2024-03-12T15:24:32.283+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-03-12T15:24:32.286+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.290+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.299+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.302+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.303+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000001fb814e2c38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.305+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.311+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.318+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.320+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.320+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.322+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.328+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.336+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.338+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.340+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.342+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.344+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.347+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-03-12T15:24:32.349+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.350+02:00  WARN 18728 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:24:32.618+02:00  INFO 18728 --- [blogpost-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-03-12T15:24:32.629+02:00  INFO 18728 --- [blogpost-service] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-03-12T15:24:32.629+02:00  INFO 18728 --- [blogpost-service] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-03-12T15:24:32.693+02:00  INFO 18728 --- [blogpost-service] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-03-12T15:24:32.693+02:00  INFO 18728 --- [blogpost-service] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2020 ms
2024-03-12T15:24:33.014+02:00  INFO 18728 --- [blogpost-service] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-03-12T15:24:33.065+02:00  INFO 18728 --- [blogpost-service] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-03-12T15:24:33.100+02:00  INFO 18728 --- [blogpost-service] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-03-12T15:24:33.299+02:00  INFO 18728 --- [blogpost-service] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-03-12T15:24:33.322+02:00  INFO 18728 --- [blogpost-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-03-12T15:24:33.632+02:00  INFO 18728 --- [blogpost-service] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@72240290
2024-03-12T15:24:33.633+02:00  INFO 18728 --- [blogpost-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-03-12T15:24:34.590+02:00  INFO 18728 --- [blogpost-service] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-03-12T15:24:34.658+02:00  INFO 18728 --- [blogpost-service] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-03-12T15:24:35.240+02:00  WARN 18728 --- [blogpost-service] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-03-12T15:24:36.062+02:00  INFO 18728 --- [blogpost-service] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-03-12T15:24:36.096+02:00  WARN 18728 --- [blogpost-service] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-03-12T15:24:36.105+02:00  INFO 18728 --- [blogpost-service] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 17 endpoint(s) beneath base path '/actuator'
2024-03-12T15:24:36.208+02:00  INFO 18728 --- [blogpost-service] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-03-12T15:24:36.243+02:00  INFO 18728 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-03-12T15:24:36.247+02:00  INFO 18728 --- [blogpost-service] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-03-12T15:24:36.268+02:00  INFO 18728 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-03-12T15:24:36.269+02:00  INFO 18728 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-03-12T15:24:36.269+02:00  INFO 18728 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-03-12T15:24:36.269+02:00  INFO 18728 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-03-12T15:24:36.269+02:00  INFO 18728 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-03-12T15:24:36.269+02:00  INFO 18728 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-03-12T15:24:36.269+02:00  INFO 18728 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-03-12T15:24:36.601+02:00  INFO 18728 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-03-12T15:24:36.603+02:00  INFO 18728 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-03-12T15:24:36.606+02:00  INFO 18728 --- [blogpost-service] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-03-12T15:24:36.611+02:00  INFO 18728 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1710249876610 with initial instances count: 0
2024-03-12T15:24:36.618+02:00  INFO 18728 --- [blogpost-service] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application BLOGPOST-SERVICE with eureka with status UP
2024-03-12T15:24:36.619+02:00  INFO 18728 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1710249876619, current=UP, previous=STARTING]
2024-03-12T15:24:36.621+02:00  INFO 18728 --- [blogpost-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service: registering service...
2024-03-12T15:24:36.645+02:00  INFO 18728 --- [blogpost-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-03-12T15:24:36.646+02:00  INFO 18728 --- [blogpost-service] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8080
2024-03-12T15:24:36.667+02:00  INFO 18728 --- [blogpost-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service - registration status: 204
2024-03-12T15:24:36.670+02:00  INFO 18728 --- [blogpost-service] [main] c.b.b.BlogpostServiceApplication         : Started BlogpostServiceApplication in 6.515 seconds (process running for 7.192)
2024-03-12T15:24:37.269+02:00  INFO 18728 --- [blogpost-service] [RMI TCP Connection(1)-192.168.0.203] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-12T15:24:37.269+02:00  INFO 18728 --- [blogpost-service] [RMI TCP Connection(1)-192.168.0.203] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-03-12T15:24:37.271+02:00  INFO 18728 --- [blogpost-service] [RMI TCP Connection(1)-192.168.0.203] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-03-12T15:25:06.611+02:00  INFO 18728 --- [blogpost-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-03-12T15:25:06.611+02:00  INFO 18728 --- [blogpost-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-03-12T15:25:06.611+02:00  INFO 18728 --- [blogpost-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-03-12T15:25:06.611+02:00  INFO 18728 --- [blogpost-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-03-12T15:25:06.611+02:00  INFO 18728 --- [blogpost-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-03-12T15:25:06.611+02:00  INFO 18728 --- [blogpost-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2024-03-12T15:25:06.611+02:00  INFO 18728 --- [blogpost-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-03-12T15:25:06.637+02:00  INFO 18728 --- [blogpost-service] [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-03-12T15:26:10.179+02:00  INFO 18728 --- [blogpost-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application BLOGPOST-SERVICE with eureka with status DOWN
2024-03-12T15:26:10.179+02:00  INFO 18728 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1710249970179, current=DOWN, previous=UP]
2024-03-12T15:26:10.179+02:00  INFO 18728 --- [blogpost-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service: registering service...
2024-03-12T15:26:10.187+02:00  INFO 18728 --- [blogpost-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service - registration status: 204
2024-03-12T15:26:12.268+02:00  INFO 18728 --- [blogpost-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-03-12T15:26:12.270+02:00  INFO 18728 --- [blogpost-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-03-12T15:26:12.277+02:00  INFO 18728 --- [blogpost-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-03-12T15:26:12.278+02:00  INFO 18728 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-03-12T15:26:15.282+02:00  INFO 18728 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-03-12T15:26:15.300+02:00  INFO 18728 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service - deregister  status: 200
2024-03-12T15:26:15.305+02:00  INFO 18728 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-03-12T15:26:21.189+02:00  INFO 11692 --- [blogpost-service] [main] c.b.b.BlogpostServiceApplication         : Starting BlogpostServiceApplication using Java 21.0.2 with PID 11692 (C:\Users\USER\IntelliJProjects\blogposts\blogpost-service\blogpost-service\target\classes started by USER in C:\Users\USER\IntelliJProjects\blogposts)
2024-03-12T15:26:21.191+02:00  INFO 11692 --- [blogpost-service] [main] c.b.b.BlogpostServiceApplication         : No active profile set, falling back to 1 default profile: "default"
2024-03-12T15:26:22.175+02:00  INFO 11692 --- [blogpost-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-03-12T15:26:22.306+02:00  INFO 11692 --- [blogpost-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 122 ms. Found 1 JPA repository interface.
2024-03-12T15:26:22.521+02:00  INFO 11692 --- [blogpost-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=c071114f-a766-387d-abe3-ec669beca034
2024-03-12T15:26:22.822+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-03-12T15:26:22.826+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.829+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.837+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.840+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.842+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00000215ca4e6e88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.844+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.850+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.856+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.858+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.859+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.863+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.869+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.878+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.880+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.882+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.884+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.886+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.889+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-03-12T15:26:22.891+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:22.892+02:00  WARN 11692 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:26:23.146+02:00  INFO 11692 --- [blogpost-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-03-12T15:26:23.158+02:00  INFO 11692 --- [blogpost-service] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-03-12T15:26:23.158+02:00  INFO 11692 --- [blogpost-service] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-03-12T15:26:23.220+02:00  INFO 11692 --- [blogpost-service] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-03-12T15:26:23.220+02:00  INFO 11692 --- [blogpost-service] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1985 ms
2024-03-12T15:26:23.549+02:00  INFO 11692 --- [blogpost-service] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-03-12T15:26:23.607+02:00  INFO 11692 --- [blogpost-service] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-03-12T15:26:23.635+02:00  INFO 11692 --- [blogpost-service] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-03-12T15:26:23.844+02:00  INFO 11692 --- [blogpost-service] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-03-12T15:26:23.871+02:00  INFO 11692 --- [blogpost-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-03-12T15:26:24.202+02:00  INFO 11692 --- [blogpost-service] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@61ca5134
2024-03-12T15:26:24.203+02:00  INFO 11692 --- [blogpost-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-03-12T15:26:25.199+02:00  INFO 11692 --- [blogpost-service] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-03-12T15:26:25.270+02:00  INFO 11692 --- [blogpost-service] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-03-12T15:26:25.841+02:00  WARN 11692 --- [blogpost-service] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-03-12T15:26:26.723+02:00  INFO 11692 --- [blogpost-service] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-03-12T15:26:26.760+02:00  WARN 11692 --- [blogpost-service] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-03-12T15:26:26.768+02:00  INFO 11692 --- [blogpost-service] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 17 endpoint(s) beneath base path '/actuator'
2024-03-12T15:26:26.869+02:00  INFO 11692 --- [blogpost-service] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-03-12T15:26:26.905+02:00  INFO 11692 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-03-12T15:26:26.910+02:00  INFO 11692 --- [blogpost-service] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-03-12T15:26:26.935+02:00  INFO 11692 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-03-12T15:26:26.935+02:00  INFO 11692 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-03-12T15:26:26.936+02:00  INFO 11692 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-03-12T15:26:26.936+02:00  INFO 11692 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-03-12T15:26:26.936+02:00  INFO 11692 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-03-12T15:26:26.936+02:00  INFO 11692 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-03-12T15:26:26.936+02:00  INFO 11692 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-03-12T15:26:27.280+02:00  INFO 11692 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-03-12T15:26:27.283+02:00  INFO 11692 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-03-12T15:26:27.285+02:00  INFO 11692 --- [blogpost-service] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-03-12T15:26:27.289+02:00  INFO 11692 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1710249987288 with initial instances count: 1
2024-03-12T15:26:27.296+02:00  INFO 11692 --- [blogpost-service] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application BLOGPOST-SERVICE with eureka with status UP
2024-03-12T15:26:27.296+02:00  INFO 11692 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1710249987296, current=UP, previous=STARTING]
2024-03-12T15:26:27.298+02:00  INFO 11692 --- [blogpost-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service: registering service...
2024-03-12T15:26:27.319+02:00  INFO 11692 --- [blogpost-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-03-12T15:26:27.320+02:00  INFO 11692 --- [blogpost-service] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8080
2024-03-12T15:26:27.382+02:00  INFO 11692 --- [blogpost-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service - registration status: 204
2024-03-12T15:26:27.385+02:00  INFO 11692 --- [blogpost-service] [main] c.b.b.BlogpostServiceApplication         : Started BlogpostServiceApplication in 6.658 seconds (process running for 7.354)
2024-03-12T15:26:27.826+02:00  INFO 11692 --- [blogpost-service] [RMI TCP Connection(4)-192.168.0.203] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-12T15:26:27.826+02:00  INFO 11692 --- [blogpost-service] [RMI TCP Connection(4)-192.168.0.203] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-03-12T15:26:27.828+02:00  INFO 11692 --- [blogpost-service] [RMI TCP Connection(4)-192.168.0.203] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-03-12T15:28:00.651+02:00  INFO 11692 --- [blogpost-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application BLOGPOST-SERVICE with eureka with status DOWN
2024-03-12T15:28:00.651+02:00  INFO 11692 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1710250080651, current=DOWN, previous=UP]
2024-03-12T15:28:00.651+02:00  INFO 11692 --- [blogpost-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service: registering service...
2024-03-12T15:28:00.670+02:00  INFO 11692 --- [blogpost-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service - registration status: 204
2024-03-12T15:28:02.757+02:00  INFO 11692 --- [blogpost-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-03-12T15:28:02.759+02:00  INFO 11692 --- [blogpost-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-03-12T15:28:02.766+02:00  INFO 11692 --- [blogpost-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-03-12T15:28:02.768+02:00  INFO 11692 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-03-12T15:28:05.784+02:00  INFO 11692 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-03-12T15:28:05.801+02:00  INFO 11692 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service - deregister  status: 200
2024-03-12T15:28:05.805+02:00  INFO 11692 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-03-12T15:28:10.535+02:00  INFO 18800 --- [blogpost-service] [main] c.b.b.BlogpostServiceApplication         : Starting BlogpostServiceApplication using Java 21.0.2 with PID 18800 (C:\Users\USER\IntelliJProjects\blogposts\blogpost-service\blogpost-service\target\classes started by USER in C:\Users\USER\IntelliJProjects\blogposts)
2024-03-12T15:28:10.536+02:00  INFO 18800 --- [blogpost-service] [main] c.b.b.BlogpostServiceApplication         : No active profile set, falling back to 1 default profile: "default"
2024-03-12T15:28:11.584+02:00  INFO 18800 --- [blogpost-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-03-12T15:28:11.720+02:00  INFO 18800 --- [blogpost-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 130 ms. Found 1 JPA repository interface.
2024-03-12T15:28:11.980+02:00  INFO 18800 --- [blogpost-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=c071114f-a766-387d-abe3-ec669beca034
2024-03-12T15:28:12.301+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-03-12T15:28:12.304+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.308+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.318+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.320+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.322+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000002163f51da20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.324+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.331+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.337+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.340+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.341+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.342+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.349+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.361+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.363+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.365+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.367+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.370+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.373+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-03-12T15:28:12.376+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.378+02:00  WARN 18800 --- [blogpost-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-12T15:28:12.645+02:00  INFO 18800 --- [blogpost-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-03-12T15:28:12.657+02:00  INFO 18800 --- [blogpost-service] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-03-12T15:28:12.657+02:00  INFO 18800 --- [blogpost-service] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-03-12T15:28:12.727+02:00  INFO 18800 --- [blogpost-service] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-03-12T15:28:12.728+02:00  INFO 18800 --- [blogpost-service] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2149 ms
2024-03-12T15:28:13.065+02:00  INFO 18800 --- [blogpost-service] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-03-12T15:28:13.140+02:00  INFO 18800 --- [blogpost-service] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-03-12T15:28:13.173+02:00  INFO 18800 --- [blogpost-service] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-03-12T15:28:13.379+02:00  INFO 18800 --- [blogpost-service] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-03-12T15:28:13.403+02:00  INFO 18800 --- [blogpost-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-03-12T15:28:13.753+02:00  INFO 18800 --- [blogpost-service] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@480994d3
2024-03-12T15:28:13.754+02:00  INFO 18800 --- [blogpost-service] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-03-12T15:28:14.851+02:00  INFO 18800 --- [blogpost-service] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-03-12T15:28:14.935+02:00  INFO 18800 --- [blogpost-service] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-03-12T15:28:15.599+02:00  WARN 18800 --- [blogpost-service] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-03-12T15:28:16.511+02:00  INFO 18800 --- [blogpost-service] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-03-12T15:28:16.549+02:00  WARN 18800 --- [blogpost-service] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-03-12T15:28:16.560+02:00  INFO 18800 --- [blogpost-service] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 17 endpoint(s) beneath base path '/actuator'
2024-03-12T15:28:16.672+02:00  INFO 18800 --- [blogpost-service] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-03-12T15:28:16.710+02:00  INFO 18800 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-03-12T15:28:16.716+02:00  INFO 18800 --- [blogpost-service] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-03-12T15:28:16.761+02:00  INFO 18800 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-03-12T15:28:16.762+02:00  INFO 18800 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-03-12T15:28:16.762+02:00  INFO 18800 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-03-12T15:28:16.762+02:00  INFO 18800 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-03-12T15:28:16.762+02:00  INFO 18800 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-03-12T15:28:16.762+02:00  INFO 18800 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-03-12T15:28:16.762+02:00  INFO 18800 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-03-12T15:28:17.161+02:00  INFO 18800 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-03-12T15:28:17.190+02:00  INFO 18800 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-03-12T15:28:17.195+02:00  INFO 18800 --- [blogpost-service] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-03-12T15:28:17.201+02:00  INFO 18800 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1710250097199 with initial instances count: 1
2024-03-12T15:28:17.208+02:00  INFO 18800 --- [blogpost-service] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application BLOGPOST-SERVICE with eureka with status UP
2024-03-12T15:28:17.209+02:00  INFO 18800 --- [blogpost-service] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1710250097208, current=UP, previous=STARTING]
2024-03-12T15:28:17.212+02:00  INFO 18800 --- [blogpost-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service: registering service...
2024-03-12T15:28:17.238+02:00  INFO 18800 --- [blogpost-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2024-03-12T15:28:17.239+02:00  INFO 18800 --- [blogpost-service] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8080
2024-03-12T15:28:17.263+02:00  INFO 18800 --- [blogpost-service] [main] c.b.b.BlogpostServiceApplication         : Started BlogpostServiceApplication in 7.35 seconds (process running for 8.347)
2024-03-12T15:28:17.263+02:00  INFO 18800 --- [blogpost-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service - registration status: 204
2024-03-12T15:28:17.818+02:00  INFO 18800 --- [blogpost-service] [RMI TCP Connection(2)-192.168.0.203] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-12T15:28:17.819+02:00  INFO 18800 --- [blogpost-service] [RMI TCP Connection(2)-192.168.0.203] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-03-12T15:28:17.820+02:00  INFO 18800 --- [blogpost-service] [RMI TCP Connection(2)-192.168.0.203] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-03-12T15:30:56.411+02:00 DEBUG 18800 --- [blogpost-service] [http-nio-8080-exec-9] c.b.b.exception.GlobalExceptionHandler   : 404 Not Found from GET http://localhost:8080/api/v1/users/1
2024-03-12T15:31:41.428+02:00  INFO 18800 --- [blogpost-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application BLOGPOST-SERVICE with eureka with status DOWN
2024-03-12T15:31:41.428+02:00  INFO 18800 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1710250301428, current=DOWN, previous=UP]
2024-03-12T15:31:41.428+02:00  INFO 18800 --- [blogpost-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service: registering service...
2024-03-12T15:31:41.441+02:00  INFO 18800 --- [blogpost-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service - registration status: 204
2024-03-12T15:31:43.534+02:00  INFO 18800 --- [blogpost-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-03-12T15:31:43.536+02:00  INFO 18800 --- [blogpost-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-03-12T15:31:43.543+02:00  INFO 18800 --- [blogpost-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-03-12T15:31:43.545+02:00  INFO 18800 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-03-12T15:31:46.561+02:00  INFO 18800 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-03-12T15:31:46.580+02:00  INFO 18800 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BLOGPOST-SERVICE/HP-MYKOLA.mshome.net:blogpost-service - deregister  status: 200
2024-03-12T15:31:46.585+02:00  INFO 18800 --- [blogpost-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
